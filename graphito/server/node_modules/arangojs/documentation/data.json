{
    "project": {},
    "files": {
        "lib/api/action.js": {
            "name": "lib/api/action.js",
            "modules": {},
            "classes": {
                "action": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/admin.js": {
            "name": "lib/api/admin.js",
            "modules": {},
            "classes": {
                "admin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/aqlfunction.js": {
            "name": "lib/api/aqlfunction.js",
            "modules": {},
            "classes": {
                "aqlfunction": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/batch.js": {
            "name": "lib/api/batch.js",
            "modules": {},
            "classes": {
                "batch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/collection.js": {
            "name": "lib/api/collection.js",
            "modules": {},
            "classes": {
                "collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/cursor.js": {
            "name": "lib/api/cursor.js",
            "modules": {},
            "classes": {
                "cursor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/database.js": {
            "name": "lib/api/database.js",
            "modules": {},
            "classes": {
                "database": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/document.js": {
            "name": "lib/api/document.js",
            "modules": {},
            "classes": {
                "document": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/edge.js": {
            "name": "lib/api/edge.js",
            "modules": {},
            "classes": {
                "edge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/endpoint.js": {
            "name": "lib/api/endpoint.js",
            "modules": {},
            "classes": {
                "endpoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/graph.js": {
            "name": "lib/api/graph.js",
            "modules": {},
            "classes": {
                "graph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/import.js": {
            "name": "lib/api/import.js",
            "modules": {},
            "classes": {
                "import": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/index.js": {
            "name": "lib/api/index.js",
            "modules": {},
            "classes": {
                "index": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/job.js": {
            "name": "lib/api/job.js",
            "modules": {},
            "classes": {
                "jobs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/query.js": {
            "name": "lib/api/query.js",
            "modules": {},
            "classes": {
                "query": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/simple.js": {
            "name": "lib/api/simple.js",
            "modules": {},
            "classes": {
                "simple": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/transaction.js": {
            "name": "lib/api/transaction.js",
            "modules": {},
            "classes": {
                "transaction": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/traversal.js": {
            "name": "lib/api/traversal.js",
            "modules": {},
            "classes": {
                "traversal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/api/user.js": {
            "name": "lib/api/user.js",
            "modules": {},
            "classes": {
                "users": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/arango.js": {
            "name": "lib/arango.js",
            "modules": {
                "arango": 1
            },
            "classes": {
                "arango": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "arango": {
            "name": "arango",
            "submodules": {
                "action": 1,
                "admin": 1,
                "aqlfunction": 1,
                "batch": 1,
                "collection": 1,
                "cursor": 1,
                "database": 1,
                "document": 1,
                "edge": 1,
                "endpoint": 1,
                "graph": 1,
                "import": 1,
                "index": 1,
                "jobs": 1,
                "query": 1,
                "simple": 1,
                "transaction": 1,
                "traversal": 1,
                "users": 1
            },
            "classes": {
                "action": 1,
                "admin": 1,
                "aqlfunction": 1,
                "batch": 1,
                "collection": 1,
                "cursor": 1,
                "database": 1,
                "document": 1,
                "edge": 1,
                "endpoint": 1,
                "graph": 1,
                "import": 1,
                "index": 1,
                "jobs": 1,
                "query": 1,
                "simple": 1,
                "transaction": 1,
                "traversal": 1,
                "users": 1,
                "arango": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/arango.js",
            "line": 77,
            "description": "Creates an arango connection, can be called either with a JSON Object representing the connection or with a\nconnection String."
        },
        "action": {
            "name": "action",
            "submodules": {},
            "classes": {
                "action": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module \"action\" to define user actions in ArangoDB.",
            "file": "lib/api/action.js",
            "line": 10
        },
        "admin": {
            "name": "admin",
            "submodules": {},
            "classes": {
                "admin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to do administrative requests on Arango",
            "file": "lib/api/admin.js",
            "line": 3
        },
        "aqlfunction": {
            "name": "aqlfunction",
            "submodules": {},
            "classes": {
                "aqlfunction": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module \"aqlfunction\" to define user functions in ArangoDB.",
            "file": "lib/api/aqlfunction.js",
            "line": 3
        },
        "batch": {
            "name": "batch",
            "submodules": {},
            "classes": {
                "batch": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module \"batch\" to perform batch requests. Calling \"start\" sets the connection into batch mode and collects\nevery request. Calling \"Exec\" switches back to normal mode and executes the batch.",
            "file": "lib/api/batch.js",
            "line": 5
        },
        "collection": {
            "name": "collection",
            "submodules": {},
            "classes": {
                "collection": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to do perform operations on collections.",
            "file": "lib/api/collection.js",
            "line": 4
        },
        "cursor": {
            "name": "cursor",
            "submodules": {},
            "classes": {
                "cursor": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to validate, test, execute arangodb queries and fetch the data..",
            "file": "lib/api/cursor.js",
            "line": 2
        },
        "database": {
            "name": "database",
            "submodules": {},
            "classes": {
                "database": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to perform database related operations on ArangoDB.",
            "file": "lib/api/database.js",
            "line": 3
        },
        "document": {
            "name": "document",
            "submodules": {},
            "classes": {
                "document": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to perform document related operations on ArangoDB.",
            "file": "lib/api/document.js",
            "line": 4
        },
        "edge": {
            "name": "edge",
            "submodules": {},
            "classes": {
                "edge": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to perform edge related operations on ArangoDB.",
            "file": "lib/api/edge.js",
            "line": 4
        },
        "endpoint": {
            "name": "endpoint",
            "submodules": {},
            "classes": {
                "endpoint": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to maintain endpoints in ArangoDB.",
            "file": "lib/api/endpoint.js",
            "line": 3
        },
        "graph": {
            "name": "graph",
            "submodules": {},
            "classes": {
                "graph": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to perform graph related operations on ArangoDB.",
            "file": "lib/api/graph.js",
            "line": 13
        },
        "import": {
            "name": "import",
            "submodules": {},
            "classes": {
                "import": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to import data into ArangoDB.",
            "file": "lib/api/import.js",
            "line": 4
        },
        "index": {
            "name": "index",
            "submodules": {},
            "classes": {
                "index": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to create indices for collections in ArangoDB.",
            "file": "lib/api/index.js",
            "line": 4
        },
        "jobs": {
            "name": "jobs",
            "submodules": {},
            "classes": {
                "jobs": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to request information about async running jobs in ArangoDB.",
            "file": "lib/api/job.js",
            "line": 3
        },
        "query": {
            "name": "query",
            "submodules": {},
            "classes": {
                "query": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to create and execute queries running in ArangoDB.\nThis module wraps the cursor module.",
            "file": "lib/api/query.js",
            "line": 5
        },
        "simple": {
            "name": "simple",
            "submodules": {},
            "classes": {
                "simple": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to do perform simple queries in ArangoDB.",
            "file": "lib/api/simple.js",
            "line": 2
        },
        "transaction": {
            "name": "transaction",
            "submodules": {},
            "classes": {
                "transaction": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to execute transactions in ArangoDB.",
            "file": "lib/api/transaction.js",
            "line": 2
        },
        "traversal": {
            "name": "traversal",
            "submodules": {},
            "classes": {
                "traversal": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to perform a traversal on the edges of a start vertex.",
            "file": "lib/api/traversal.js",
            "line": 2
        },
        "users": {
            "name": "users",
            "submodules": {},
            "classes": {
                "users": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "arango",
            "namespace": "",
            "description": "The api module to maintain users in ArangoDB.",
            "file": "lib/api/user.js",
            "line": 2
        }
    },
    "classes": {
        "action": {
            "name": "action",
            "shortname": "action",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "file": "lib/api/action.js",
            "line": 10,
            "description": "The api module \"action\" to define user actions in ArangoDB.",
            "submodule": "action"
        },
        "admin": {
            "name": "admin",
            "shortname": "admin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/admin.js",
            "line": 3,
            "description": "The api module to do administrative requests on Arango",
            "submodule": "admin"
        },
        "aqlfunction": {
            "name": "aqlfunction",
            "shortname": "aqlfunction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/aqlfunction.js",
            "line": 3,
            "description": "The api module \"aqlfunction\" to define user functions in ArangoDB.",
            "submodule": "aqlfunction"
        },
        "batch": {
            "name": "batch",
            "shortname": "batch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/batch.js",
            "line": 5,
            "description": "The api module \"batch\" to perform batch requests. Calling \"start\" sets the connection into batch mode and collects\nevery request. Calling \"Exec\" switches back to normal mode and executes the batch.",
            "submodule": "batch"
        },
        "collection": {
            "name": "collection",
            "shortname": "collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/collection.js",
            "line": 4,
            "description": "The api module to do perform operations on collections.",
            "submodule": "collection"
        },
        "cursor": {
            "name": "cursor",
            "shortname": "cursor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/cursor.js",
            "line": 2,
            "description": "The api module to validate, test, execute arangodb queries and fetch the data..",
            "submodule": "cursor"
        },
        "database": {
            "name": "database",
            "shortname": "database",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/database.js",
            "line": 3,
            "description": "The api module to perform database related operations on ArangoDB.",
            "submodule": "database"
        },
        "document": {
            "name": "document",
            "shortname": "document",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/document.js",
            "line": 4,
            "description": "The api module to perform document related operations on ArangoDB.",
            "submodule": "document"
        },
        "edge": {
            "name": "edge",
            "shortname": "edge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/edge.js",
            "line": 4,
            "description": "The api module to perform edge related operations on ArangoDB.",
            "submodule": "edge"
        },
        "endpoint": {
            "name": "endpoint",
            "shortname": "endpoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/endpoint.js",
            "line": 3,
            "description": "The api module to maintain endpoints in ArangoDB.",
            "submodule": "endpoint"
        },
        "graph": {
            "name": "graph",
            "shortname": "graph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/graph.js",
            "line": 13,
            "description": "The api module to perform graph related operations on ArangoDB.",
            "submodule": "graph"
        },
        "import": {
            "name": "import",
            "shortname": "import",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/import.js",
            "line": 4,
            "description": "The api module to import data into ArangoDB.",
            "submodule": "import"
        },
        "index": {
            "name": "index",
            "shortname": "index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/index.js",
            "line": 4,
            "description": "The api module to create indices for collections in ArangoDB.",
            "submodule": "index"
        },
        "jobs": {
            "name": "jobs",
            "shortname": "jobs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/job.js",
            "line": 3,
            "description": "The api module to request information about async running jobs in ArangoDB.",
            "submodule": "jobs"
        },
        "query": {
            "name": "query",
            "shortname": "query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/query.js",
            "line": 5,
            "description": "The api module to create and execute queries running in ArangoDB.\nThis module wraps the cursor module.",
            "submodule": "query"
        },
        "simple": {
            "name": "simple",
            "shortname": "simple",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/simple.js",
            "line": 2,
            "description": "The api module to do perform simple queries in ArangoDB.",
            "submodule": "simple"
        },
        "transaction": {
            "name": "transaction",
            "shortname": "transaction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/transaction.js",
            "line": 2,
            "description": "The api module to execute transactions in ArangoDB.",
            "submodule": "transaction"
        },
        "traversal": {
            "name": "traversal",
            "shortname": "traversal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/traversal.js",
            "line": 2,
            "description": "The api module to perform a traversal on the edges of a start vertex.",
            "submodule": "traversal"
        },
        "users": {
            "name": "users",
            "shortname": "users",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/api/user.js",
            "line": 2,
            "description": "The api module to maintain users in ArangoDB.",
            "submodule": "users"
        },
        "arango": {
            "name": "arango",
            "shortname": "arango",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arango",
            "namespace": "",
            "file": "lib/arango.js",
            "line": 77,
            "description": "Creates an arango connection, can be called either with a JSON Object representing the connection or with a\nconnection String.",
            "example": [
                "\n arango.Connection(\"https://user:pass@hostname:8529/database:collection\")<br>\n arango.Connection(\"https://test.com\")<br>\n arango.Connection({_name:\"database\",_collection:\"collection\",_server:{hostname:\"test.host\"}})<br>"
            ],
            "return": {
                "description": "",
                "type": "Arango"
            },
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "lib/api/action.js",
            "line": 21,
            "description": "Defines an action.",
            "params": [
                {
                    "name": "o",
                    "description": "- Object containing the action mandatory and optional settings.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "- The name of the action.",
                            "type": "String"
                        },
                        {
                            "name": "url",
                            "description": "- The url of the action.",
                            "type": "String"
                        },
                        {
                            "name": "method",
                            "description": "- The method of the action.",
                            "type": "String"
                        },
                        {
                            "name": "result",
                            "description": "- A function called if a result has been returned.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "error",
                            "description": "- A function called if an error occured.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "f",
                    "description": "- A function to be executed on the server.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "reload",
                    "description": "- If true, the routes will be reloaded.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "None"
            },
            "itemtype": "method",
            "name": "define",
            "class": "action",
            "module": "arango",
            "submodule": "action"
        },
        {
            "file": "lib/api/action.js",
            "line": 119,
            "description": "Executes an action and returns a promise.",
            "params": [
                {
                    "name": "actionName",
                    "description": "- Name of the action to be executed.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- Data passed to the action.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- Callback function.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "submit",
            "class": "action",
            "module": "arango",
            "submodule": "action"
        },
        {
            "file": "lib/api/action.js",
            "line": 135,
            "description": "deletes an action and its route if existing.",
            "params": [
                {
                    "name": "actionName",
                    "description": "- Name of the action to be executed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "undefine",
            "class": "action",
            "module": "arango",
            "submodule": "action"
        },
        {
            "file": "lib/api/action.js",
            "line": 156,
            "description": "returns all actions currently available.",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getActions",
            "class": "action",
            "module": "arango",
            "submodule": "action"
        },
        {
            "file": "lib/api/admin.js",
            "line": 14,
            "description": "Returns the server version",
            "params": [
                {
                    "name": "details",
                    "description": "- If true more details are returned.",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "version",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 25,
            "description": "Returns server statistics.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "statistics",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 35,
            "description": "Returns descriptions for server statistics.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "statisticsDescription",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 45,
            "description": "Returns the server logs.",
            "params": [
                {
                    "name": "options",
                    "description": "- Optional parameters and filters, can contain.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "upto",
                            "description": "- Returns all log entries up to log level upto. Note that upto must be:\n<br>\\- fatal or 0 <br>- error or 1 <br>- warning or 2 <br>- info or 3 <br>- debug or 4 <br>The default value\nis info.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "level",
                            "description": "- Returns all log entries of log level level. Note that the URL\nparameters upto and level are mutually exclusive.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "description": "- Returns all log entries such that their log entry identifier (lid\nvalue) is greater or equal to start.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "size",
                            "description": "- Restricts the result to at most size log entries.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offset",
                            "description": "- Starts to return log entries skipping the first offset log entries.\noffset and size can be used for pagination.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sort",
                            "description": "- Sort the log entries either ascending (if sort is asc) or descending\n(if sort is desc) according to their lid values. Note that the lid imposes a chronological order. The default\nvalue is asc",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "itemtype": "method",
            "name": "log",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 75,
            "description": "Returns the routes defined in ArangoDB,",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "routes",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 85,
            "description": "Reloads the routes in ArangoDB.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "routesReload",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 95,
            "description": "Flushes the server modules.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "modulesFlush",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 105,
            "description": "Returns the server time.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "time",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/admin.js",
            "line": 115,
            "description": "The call returns an object with the following attributes: <br>- headers: a list of HTTP headers received\n\\n<br>- requestType: the HTTP request method (e.g. GET)<br>- parameters: list of URL parameters received",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "echo",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin",
            "module": "arango",
            "submodule": "admin"
        },
        {
            "file": "lib/api/aqlfunction.js",
            "line": 14,
            "description": "Creates a user defined AQL function.",
            "params": [
                {
                    "name": "name",
                    "description": "- name of the function.",
                    "type": "String"
                },
                {
                    "name": "code",
                    "description": "- the function.",
                    "type": "String"
                },
                {
                    "name": "isDeterministic",
                    "description": "-   boolean value to indicate that the function results are fully\ndeterministic.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "aqlfunction",
            "module": "arango",
            "submodule": "aqlfunction"
        },
        {
            "file": "lib/api/aqlfunction.js",
            "line": 35,
            "description": "Deletes a user defined AQL function.",
            "params": [
                {
                    "name": "name",
                    "description": "- name of the function.",
                    "type": "String"
                },
                {
                    "name": "group",
                    "description": "- if set to true all functions is the namespace set in name will be deleted.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "aqlfunction",
            "module": "arango",
            "submodule": "aqlfunction"
        },
        {
            "file": "lib/api/aqlfunction.js",
            "line": 47,
            "description": "Returns all user defined AQL functions.",
            "params": [
                {
                    "name": "namespace",
                    "description": "- If set only functions in this namespace will be returned.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "aqlfunction",
            "module": "arango",
            "submodule": "aqlfunction"
        },
        {
            "file": "lib/api/batch.js",
            "line": 22,
            "description": "Enables the batch mode for the current connection.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "The modified arango connection.",
                "type": "Object"
            },
            "class": "batch",
            "module": "arango",
            "submodule": "batch"
        },
        {
            "file": "lib/api/batch.js",
            "line": 46,
            "description": "Disables the batch mode and executes the batch request.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "exec",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "batch",
            "module": "arango",
            "submodule": "batch"
        },
        {
            "file": "lib/api/batch.js",
            "line": 132,
            "description": "Disables the batch mode and rejects all requests in the current batch.",
            "params": [
                {
                    "name": "reason",
                    "description": "- reason for cancellation.",
                    "type": "String",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "cancel",
            "return": {
                "description": "The original arango collection;",
                "type": "Object"
            },
            "class": "batch",
            "module": "arango",
            "submodule": "batch"
        },
        {
            "file": "lib/api/collection.js",
            "line": 15,
            "description": "Creates a collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- the collection name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a JSONObject containing optional attributes:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "waitForSync",
                            "description": "-    If true then the data is synchronised to disk before\nreturning from a create or update of a document.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "doCompact",
                            "description": "- whether or not the collection will be compacted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "type",
                            "description": "-   the type of the collection to create. The following values for type are\nvalid: <br>- 2: document collection <br>- 3: edges collection",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "2"
                        },
                        {
                            "name": "journalSize",
                            "description": "-   The maximal size of a journal or datafile. Must be at least 1MB.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "isSystem",
                            "description": "If true, create a system collection. In this case collectionname\nshould start with an underscore. End users should normally create non-system collections only. API\nimplementors may be required to create system collections in very special occasions, but normally a regular\ncollection will do.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "isVolatile",
                            "description": "If true then the collection data is kept in-memory only and not\nmade persistent. Unloading the collection will cause the collection data to be discarded. Stopping or\nre-starting the server will also cause full loss of data in the collection. Setting this option will make the\nresulting collection be slightly faster than regular collections because ArangoDB does not enforce any\nsynchronisation to disk and does not calculate any CRC checksums for datafiles.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "keyOptions",
                            "description": "-   additional options for key generation. If specified, then keyOptions\nshould be a JSON array containing the following attributes:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "type",
                                    "description": "\"traditional\" and \"autoincrement\".",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "allowUserKeys",
                                    "description": "-    if set to true, then it is allowed to supply\nown key values in the _key attribute of a document.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "increment",
                                    "description": "-   increment value for autoincrement key generator.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "offset",
                                    "description": "-   initial offset value for autoincrement key generator.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "create",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 61,
            "description": "The result is an object describing the collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "get",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 72,
            "description": "Deletes the collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "delete",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 83,
            "description": "Deletes all documents of a collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "truncate",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 94,
            "description": "Counts the document in the collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "count",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 105,
            "description": "Result contains the number of documents and additional statistical information about the collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "figures",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 116,
            "description": "Returns a list of all collections in the database.",
            "params": [
                {
                    "name": "excludeSystem",
                    "description": "-    if set to true no system collections are returned.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "list",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 133,
            "description": "Loads a collection into memory.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "load",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 150,
            "description": "Deletes a collection from memory.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "unload",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 161,
            "description": "Renames a collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "- the new name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "rename",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 176,
            "description": "Result contains the waitForSync, doCompact, journalSize, and isVolatile properties.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getProperties",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 187,
            "description": "Changes the properties of a collection.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "- JSON Object that can contain each of the following:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "waitForSync",
                            "description": "-  If true then creating or changing a document will wait\nuntil the data has been synchronised to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "journalSize",
                            "description": "-   Size (in bytes) for new journal files that are created for the\ncollection.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "setProperties",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 203,
            "description": "Result contains the collection's revision id. The revision id is a server-generated string that clients can\nuse to check whether data in a collection has changed since the last revision check.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "revision",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 216,
            "description": "Will calculate a checksum of the meta-data (keys and optionally revision ids) and optionally the document\ndata in the collection.\nThe checksum can be used to compare if two collections on different ArangoDB instances contain the same\ncontents. The current revision of the collection is returned too so one can make sure the checksums are\ncalculated for the same state of data.",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- JSON Object that can contain each of the following:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "withRevisions",
                            "description": "-   If true, then revision ids (_rev system attributes) are\nincluded in the checksumming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "withData",
                            "description": "-   If true, the user-defined document attributes will be\nincluded in the calculation too.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "checksum",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/collection.js",
            "line": 243,
            "description": "Rotates the journal of a collection. The current journal of the collection will be closed and made a read-only\ndatafile. The purpose of the rotate method is to make the data in the file available for compaction (compaction\nis only performed for read-only datafiles, and not for journals).",
            "params": [
                {
                    "name": "id",
                    "description": "- the collection handle.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "rotate",
            "class": "collection",
            "module": "arango",
            "submodule": "collection"
        },
        {
            "file": "lib/api/cursor.js",
            "line": 13,
            "description": "Fetches data for a cursor.",
            "params": [
                {
                    "name": "id",
                    "description": "-   The id of the cursor to fetch data for",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "cursor",
            "module": "arango",
            "submodule": "cursor"
        },
        {
            "file": "lib/api/cursor.js",
            "line": 25,
            "description": "Executes query string.",
            "params": [
                {
                    "name": "data",
                    "description": "- A JSON Object containing the query data:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "query",
                            "description": "- contains the query string to be executed.",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "-   boolean flag that indicates whether the number of documents in the\nresult set should be returned in the \"count\" attribute of the result.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "batchSize",
                            "description": "-   maximum number of result documents to be transferred from the server\nto the client in one roundtrip (optional). If this attribute is not set, a server-controlled default value\nwill be used.",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "bindVars",
                            "description": "key/value list of bind parameters.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "options",
                            "description": "-   key/value list of extra options for the query",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "fullCount",
                                    "description": "-   if set to true and the query contains a LIMIT clause,\nthen the result will contain an extra attribute extra with a sub-attribute fullCount. This sub-attribute will\ncontain the number of documents in the result before the last LIMIT in the query was applied. It can be used\nto count the number of documents that match certain filter criteria, but only return a subset of them, in one\ngo.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "cursor",
            "module": "arango",
            "submodule": "cursor"
        },
        {
            "file": "lib/api/cursor.js",
            "line": 49,
            "description": "Validates a query.",
            "params": [
                {
                    "name": "data",
                    "description": "- A JSON Object containing the query data:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "query",
                            "description": "- contains the query string to be executed.",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "-   boolean flag that indicates whether the number of documents in the\nresult set should be returned in the \"count\" attribute of the result.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "batchSize",
                            "description": "-   maximum number of result documents to be transferred from the server\nto the client in one roundtrip (optional). If this attribute is not set, a server-controlled default value\nwill be used.",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "bindVars",
                            "description": "key/value list of bind parameters.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "options",
                            "description": "-   key/value list of extra options for the query",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "fullCount",
                                    "description": "-   if set to true and the query contains a LIMIT clause,\nthen the result will contain an extra attribute extra with a sub-attribute fullCount. This sub-attribute will\ncontain the number of documents in the result before the last LIMIT in the query was applied. It can be used\nto count the number of documents that match certain filter criteria, but only return a subset of them, in one\ngo.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "query",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "cursor",
            "module": "arango",
            "submodule": "cursor"
        },
        {
            "file": "lib/api/cursor.js",
            "line": 73,
            "description": "Explains a query.",
            "params": [
                {
                    "name": "data",
                    "description": "- A JSON Object containing the query data:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "query",
                            "description": "- contains the query string to be executed.",
                            "type": "String"
                        },
                        {
                            "name": "count",
                            "description": "-   boolean flag that indicates whether the number of documents in the\nresult set should be returned in the \"count\" attribute of the result.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "batchSize",
                            "description": "-   maximum number of result documents to be transferred from the server\nto the client in one roundtrip (optional). If this attribute is not set, a server-controlled default value\nwill be used.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "bindVars",
                            "description": "key/value list of bind parameters.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "options",
                            "description": "-   key/value list of extra options for the query",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "fullCount",
                                    "description": "-   if set to true and the query contains a LIMIT clause,\nthen the result will contain an extra attribute extra with a sub-attribute fullCount. This sub-attribute will\ncontain the number of documents in the result before the last LIMIT in the query was applied. It can be used\nto count the number of documents that match certain filter criteria, but only return a subset of them, in one\ngo.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "explain",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "cursor",
            "module": "arango",
            "submodule": "cursor"
        },
        {
            "file": "lib/api/cursor.js",
            "line": 100,
            "description": "deletes a cursor.",
            "params": [
                {
                    "name": "id",
                    "description": "-   The id of the cursor to fetch data for",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "cursor",
            "module": "arango",
            "submodule": "cursor"
        },
        {
            "file": "lib/api/database.js",
            "line": 14,
            "description": "Creates a database.",
            "params": [
                {
                    "name": "name",
                    "description": "-   The name of the database.",
                    "type": "String"
                },
                {
                    "name": "users",
                    "description": "-  A list containing objects describing the users, each user Object contains:",
                    "type": "List",
                    "props": [
                        {
                            "name": "username",
                            "description": "-   The name of the user.",
                            "type": "String"
                        },
                        {
                            "name": "passwd",
                            "description": "-   The user password",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "active",
                            "description": "-  Indicates if the user is active.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "extra",
                            "description": "-   Object containing additional user data.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "database",
            "module": "arango",
            "submodule": "database"
        },
        {
            "file": "lib/api/database.js",
            "line": 42,
            "description": "Retrieves information about the current database",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "current",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "database",
            "module": "arango",
            "submodule": "database"
        },
        {
            "file": "lib/api/database.js",
            "line": 53,
            "description": "Lists all databases.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "database",
            "module": "arango",
            "submodule": "database"
        },
        {
            "file": "lib/api/database.js",
            "line": 64,
            "description": "Returns all databases the current user can access.",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "user",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "database",
            "module": "arango",
            "submodule": "database"
        },
        {
            "file": "lib/api/database.js",
            "line": 75,
            "description": "Deletes a database.",
            "params": [
                {
                    "name": "name",
                    "description": "-   The database to delete.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "database",
            "module": "arango",
            "submodule": "database"
        },
        {
            "file": "lib/api/document.js",
            "line": 16,
            "description": "creates a a document in a given collection.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "- the data of the document as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "createCollection",
                            "description": "- if set the collection given in \"collection\" is created as\nwell.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 48,
            "description": "retrieves a document from the database",
            "params": [
                {
                    "name": "id",
                    "description": "- the document-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- boolean defining if the given revision should match the found document or\nnot.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 71,
            "description": "replaces a document with the data given in data.",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 103,
            "description": "patches a document with the data given in data",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "keepNull",
                            "description": "-  if set to false a patch request will delete every null value\nattributes.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 135,
            "description": "Deletes a document",
            "params": [
                {
                    "name": "id",
                    "description": "- the document-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- boolean defining if the given revision should match the found document or\nnot.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 167,
            "description": "same as get but only returns the header.",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/document.js",
            "line": 194,
            "description": "returns all documents in a collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "document",
            "module": "arango",
            "submodule": "document"
        },
        {
            "file": "lib/api/edge.js",
            "line": 16,
            "description": "creates an edge in a given collection.",
            "params": [
                {
                    "name": "collection",
                    "description": "- the collection",
                    "type": "String"
                },
                {
                    "name": "from",
                    "description": "- The document handle of the start point must be passed in from handle.",
                    "type": "String"
                },
                {
                    "name": "to",
                    "description": "- The document handle of the end point must be passed in from handle.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "createCollection",
                            "description": "- if set the collection given in \"collection\" is created as\nwell.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 53,
            "description": "retrieves an edge from the database",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 78,
            "description": "replaces an edge with the data given in data.",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 112,
            "description": "patches an edge with the data given in data",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "keepNull",
                            "description": "-  if set to false a patch request will delete every null value\nattributes.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 148,
            "description": "Deletes an edge",
            "params": [
                {
                    "name": "id",
                    "description": "- the document-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- boolean defining if the given revision should match the found document or\nnot.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 178,
            "description": "same as get but only returns the header.",
            "params": [
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  String the revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/edge.js",
            "line": 201,
            "description": "Returns the list of edges starting or ending in the vertex identified by vertex-handle.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "vertex",
                    "description": "-   The id of the start vertex.",
                    "type": "String"
                },
                {
                    "name": "direction",
                    "description": "- Selects in or out direction for edges. If not set, any edges are returned.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "any"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "edge",
            "module": "arango",
            "submodule": "edge"
        },
        {
            "file": "lib/api/endpoint.js",
            "line": 14,
            "description": "creates an endpoint",
            "params": [
                {
                    "name": "endpoint",
                    "description": "-  the endpoint specification, e.g. tcp://127.0.0.1:8530",
                    "type": "String"
                },
                {
                    "name": "databases",
                    "description": "- a list of database names the endpoint is responsible for.",
                    "type": "List"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "endpoint",
            "module": "arango",
            "submodule": "endpoint"
        },
        {
            "file": "lib/api/endpoint.js",
            "line": 32,
            "description": "Returns the list of endpoints",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "endpoint",
            "module": "arango",
            "submodule": "endpoint"
        },
        {
            "file": "lib/api/endpoint.js",
            "line": 42,
            "description": "Deletes an endpoint",
            "params": [
                {
                    "name": "endpoint",
                    "description": "-  the endpoint specification, e.g. tcp://127.0.0.1:8530",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "endpoint",
            "module": "arango",
            "submodule": "endpoint"
        },
        {
            "file": "lib/api/graph.js",
            "line": 25,
            "description": "creates a Graph.",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "vertices",
                    "description": "- the vertices collection",
                    "type": "String"
                },
                {
                    "name": "edges",
                    "description": "- the edge collection",
                    "type": "String"
                },
                {
                    "name": "waitForSync",
                    "description": "- boolean , wait until document has been sync to disk."
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 51,
            "description": "retrieves a graph from the database",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 62,
            "description": "retrieves a list of graphs from the database",
            "params": [
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 72,
            "description": "Deletes a graph",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "waitForSync",
                    "description": "- wait until document has been sync to disk.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 92,
            "description": "creates a Vertex within a Graph",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "vertexData",
                    "description": "- the vertex object as JSON. It is possible to set the vertex key by providing the _key attribute."
                },
                {
                    "name": "waitForSync",
                    "description": "- wait until document has been sync to disk.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertex.create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 112,
            "description": "retrieves a vertex from a graph",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the vertex-handle",
                    "type": "String"
                },
                {
                    "name": "options.match",
                    "description": "- defining if the given revision should match the found document or not.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "options.rev",
                    "description": "-  The revision, used by the \"match\" attribute.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertex.get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 134,
            "description": "replaces a vertex with the data given in data.",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the vertex-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the vertex as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertex.put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 165,
            "description": "patches a vertex with the data given in data",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the vertex-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the vertex as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "keepNull",
                            "description": "-  if set to false a patch request will delete every null value",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertex.patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 197,
            "description": "Deletes a vertex",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the vertex-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Boolean, wait until document has been synced to disk.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertex.delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 227,
            "description": "creates an edge within a Graph",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "edgeData",
                    "description": "- the vertex object as JSON. It is possible to set the vertex key by providing the _key attribute."
                },
                {
                    "name": "from",
                    "description": "- the start vertex of this edge",
                    "type": "String"
                },
                {
                    "name": "to",
                    "description": "- the end vertex of this edge",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "- the edges label",
                    "type": "String"
                },
                {
                    "name": "waitForSync",
                    "description": "- wait until document has been sync to disk.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edge.create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 264,
            "description": "retrieves an edge  from a graph",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edge.get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 287,
            "description": "replaces an edge with the data given in data.",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the vertex-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edge.put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 319,
            "description": "patches an edge with the data given in data",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "- the data of the edge as JSON object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- an object with the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "match",
                            "description": "- defining if the given revision should match the found document or not.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "rev",
                            "description": "-  The revision, used by the \"match\" attribute.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "forceUpdate",
                            "description": "- If set an update is performed even when the given revision\ndoes not match.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until document has been synced to disk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "keepNull",
                            "description": "-  if set to false a patch request will delete every null value",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edge.patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 351,
            "description": "Deletes an edge",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- the edge-handle",
                    "type": "String"
                },
                {
                    "name": "options.match",
                    "description": "- defining if the given revision should match the found document or not.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "options.rev",
                    "description": "-  The revision, used by the \"match\" attribute.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "options.forceUpdate",
                    "description": "- If set an update is performed even when the given revision\ndoes not match.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "options.waitForSync",
                    "description": "-  Wait until document has been synced to disk.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edge.delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 378,
            "description": "returns all neighbouring vertices of the given vertex .",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "vertex",
                    "description": "- the vertex",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- the following optional parameters are allowed:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "batchSize",
                            "description": "- the batch size of the returned cursor.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  limit the result size.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "count",
                            "description": "-   return the total number of results.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "filter",
                            "description": "-   a optional filter, The attributes of filter:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "labels",
                                    "description": "-   filter by an array of edge labels (empty array means no\nrestriction)",
                                    "type": "List",
                                    "optional": true
                                },
                                {
                                    "name": "properties",
                                    "description": "-   filter neighbors by an array of edge properties, The\nattributes of a property filter:",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "-   filter the result vertices by a key value pair",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "-   the value of the key",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "compare",
                                    "description": "-   a compare operator",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "direction",
                            "description": "filter for inbound (value \"in\") or outbound (value \"out\")\nneighbors.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "any"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "getNeighbourVertices",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 409,
            "description": "returns all neighbouring edges of the given vertex .",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph",
                    "type": "String"
                },
                {
                    "name": "vertex",
                    "description": "- the vertex",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- the following optional parameters are allowed:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "batchSize",
                            "description": "- the batch size of the returned cursor.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  limit the result size.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "count",
                            "description": "-   return the total number of results.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "filter",
                            "description": "-   a optional filter, The attributes of filter:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "labels",
                                    "description": "-   filter by an array of edge labels (empty array means no\nrestriction)",
                                    "type": "List",
                                    "optional": true
                                },
                                {
                                    "name": "properties",
                                    "description": "-   filter neighbors by an array of edge properties, The\nattributes of a property filter:",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "-   filter the result vertices by a key value pair",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "-   the value of the key",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "compare",
                                    "description": "-   a compare operator",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "direction",
                            "description": "filter for inbound (value \"in\") or outbound (value \"out\")\nneighbors.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "any"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "getEdgesForVertex",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 439,
            "description": "returns all vertices of a graph.",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- the following optional parameters are allowed:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "batchSize",
                            "description": "- the batch size of the returned cursor.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  limit the result size.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "count",
                            "description": "-   return the total number of results.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "filter",
                            "description": "-   a optional filter, The attributes of filter:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "properties",
                                    "description": "-   filter neighbors by an array of edge properties, The\nattributes of a property filter:",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "-   filter the result vertices by a key value pair",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "-   the value of the key",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "compare",
                                    "description": "-   a compare operator",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "vertices",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 465,
            "description": "returns all edges of a graph.",
            "params": [
                {
                    "name": "graph",
                    "description": "- the name of the graph.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- the following optional parameters are allowed:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "batchSize",
                            "description": "- the batch size of the returned cursor.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  limit the result size.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "count",
                            "description": "-   return the total number of results.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "filter",
                            "description": "-   a optional filter, The attributes of filter:",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "labels",
                                    "description": "-   filter by an array of edge labels (empty array means no\nrestriction)",
                                    "type": "List",
                                    "optional": true
                                },
                                {
                                    "name": "properties",
                                    "description": "-   filter neighbors by an array of edge properties,\nThe attributes of a property filter:",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "-   filter the result vertices by a key value pair",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "-   the value of the key",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "compare",
                                    "description": "-   a compare operator",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "edges",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 492,
            "description": "Sets the keepNull value for all further requests in the graph module.",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "keepNull",
            "return": {
                "description": "-   The modified instance of the graph module.",
                "type": "Object"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/graph.js",
            "line": 508,
            "description": "Sets the waitForSync value for all further requests in the graph module.",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "waitForSync",
            "return": {
                "description": "-   The modified instance of the graph module.",
                "type": "Object"
            },
            "class": "graph",
            "module": "arango",
            "submodule": "graph"
        },
        {
            "file": "lib/api/import.js",
            "line": 16,
            "description": "Imports data from a JSON Object.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "documents",
                    "description": "- The data to import, can either be one single JSON Object containing a list of\ndocuments or a list of JSON Objects seperated ny new lines.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- a JSON Object containting the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "createCollection",
                            "description": "- If true, the collection will be created if it doesn't\nexist.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until documents have been synced to disk before returning.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "complete",
                            "description": "-  If set to true, it will make the whole import fail if any error\noccurs.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "details",
                            "description": "-  If set to true or yes, the result will include an attribute\ndetails with details about documents that could not be imported.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "importJSONData",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "import",
            "module": "arango",
            "submodule": "import"
        },
        {
            "file": "lib/api/import.js",
            "line": 58,
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\n in the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "documents",
                    "description": "- The data to import, The first line of the request body must contain a\n JSON-encoded list of attribute names. All following lines in the request body must contain JSON-encoded lists\n of attribute values. Each line is interpreted as a separate document, and the values specified will be mapped\n to the list of attribute names specified in the first header line.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "- a JSON Object containting the following optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "createCollection",
                            "description": "- If true, the collection will be created if it doesn't\n exist.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "waitForSync",
                            "description": "-  Wait until documents have been synced to disk before returning.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "complete",
                            "description": "-  If set to true, it will make the whole import fail if any error\n occurs.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "details",
                            "description": "-  If set to true or yes, the result will include an attribute\n details with details about documents that could not be imported.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "importValueList",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "import",
            "module": "arango",
            "submodule": "import"
        },
        {
            "file": "lib/api/index.js",
            "line": 16,
            "description": "Creates a Cap Index for the collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "- a JSON Object containing at least one attributes:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "size",
                            "description": "-  The maximal number of documents for the collection.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "byteSize",
                            "description": "- The maximal size of the active document data in the collection.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createCapIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 41,
            "description": "Creates a geo-spatial Index for the collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fields",
                    "description": "- A list with one or two attribute paths. If it is a list with one attribute path\nlocation, then a geo-spatial index on all documents is created using location as path to the coordinates.\nThe value of the attribute must be a list with at least two double values. The list must contain the latitude\n(first value) and the longitude (second value). All documents, which do not have the attribute path or with\nvalue that are not suitable, are ignored. If it is a list with two attribute paths latitude and longitude,\nthen a geo-spatial index on all documents is created using latitude and longitude as paths the latitude and\nthe longitude. The value of the attribute latitude and of the attribute longitude must a double. All\ndocuments, which do not have the attribute paths or which values are not suitable, are ignored.",
                    "type": "List"
                },
                {
                    "name": "options",
                    "description": "- a JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "geoJson",
                            "description": "If a geo-spatial index on a location is constructed and geoJson is true,\nthen the order within the list is longitude followed by latitude. This corresponds to the format described in\nhttp://geojson.org/geojson-spec.html#positions",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "constraint",
                            "description": "- If constraint is true, then a geo-spatial constraint is created.\nThe constraint is a non-unique variant of the index. Note that it is also possible to set the unique\nattribute instead of the constraint attribute.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "ignoreNull",
                            "description": "- If a geo-spatial constraint is created and ignoreNull is true,\nthen documents with a null in location or at least one null in latitude or longitude are ignored.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createGeoSpatialIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 89,
            "description": "Creates a hash index for the collection collection-name, if it does not already exist.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fields",
                    "description": "- A list of attribute paths.",
                    "type": "List"
                },
                {
                    "name": "unique",
                    "description": "-  If true, then create a unique index.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createHashIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 123,
            "description": "Creates a skip-List index for the collection collection-name, if it does not already exist.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fields",
                    "description": "- A list of attribute paths.",
                    "type": "List"
                },
                {
                    "name": "unique",
                    "description": "-  If true, then create a unique index.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createSkipListIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 157,
            "description": "Creates a fulltext index for the collection collection-name, if it does not already exist.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fields",
                    "description": "- A list of attribute paths.",
                    "type": "List"
                },
                {
                    "name": "minLength",
                    "description": "- Minimum character length of words to index. Will default to a server-defined\nvalue if unspecified. It is thus recommended to set this value explicitly when creating the index.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createFulltextIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 194,
            "description": "Creates a bitarray index for the collection collection-name, if it does not already exist.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fields",
                    "description": "- A list of attribute paths.",
                    "type": "List"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "createBitarrayIndex",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 216,
            "description": "Retrieves an index",
            "params": [
                {
                    "name": "id",
                    "description": "-   the index id.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "get",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 226,
            "description": "Deletes an index",
            "params": [
                {
                    "name": "id",
                    "description": "-   the index id.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "delete",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/index.js",
            "line": 236,
            "description": "Retrieves all indices for a collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "list",
            "class": "index",
            "module": "arango",
            "submodule": "index"
        },
        {
            "file": "lib/api/job.js",
            "line": 14,
            "description": "Returns the result of an async job identified by job-id. If the async job result is present on the server, the\n result will be removed from the list of result. That means this method can be called for each job-id once.",
            "params": [
                {
                    "name": "jobId",
                    "description": "-  The async job id.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "put",
            "class": "jobs",
            "module": "arango",
            "submodule": "jobs"
        },
        {
            "file": "lib/api/job.js",
            "line": 27,
            "description": "Returns the list of ids of async jobs with a specific status (either done or pending). The list can be used by\nthe client to get an overview of the job system status and to retrieve completed job results later.",
            "params": [
                {
                    "name": "type",
                    "description": "-  The type of jobs to return. The type can be either done or pending. Setting the type\nto done will make the method return the ids of already completed async jobs for which results can be fetched.\nSetting the type to pending will return the ids of not yet finished async jobs.",
                    "type": "String"
                },
                {
                    "name": "count",
                    "description": "-  The maximum number of ids to return per call. If not specified, a server-defined\nmaximum value will be used.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "get",
            "class": "jobs",
            "module": "arango",
            "submodule": "jobs"
        },
        {
            "file": "lib/api/job.js",
            "line": 49,
            "description": "Deletes either all job results, expired job results, or the result of a specific job. Clients can use this\nmethod to perform an eventual garbage collection of job results.",
            "params": [
                {
                    "name": "type",
                    "description": "-  The type of jobs to delete. type can be: <br>- all:    deletes all jobs results.\nCurrently executing or queued async jobs will not be stopped by this call.<br>- expired: deletes expired\nresults. To determine the expiration status of a result, pass the stamp URL parameter. stamp needs to be a\nUNIX timestamp, and all async job results created at a lower timestamp will be deleted.<br>- an actual\njob-id: in this case, the call will remove the result of the specified async job. If the job is currently\nexecuting or queued, it will not be aborted.",
                    "type": "String"
                },
                {
                    "name": "stamp",
                    "description": "-  A UNIX timestamp specifying the expiration threshold when type is expired.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "delete",
            "class": "jobs",
            "module": "arango",
            "submodule": "jobs"
        },
        {
            "file": "lib/api/query.js",
            "line": 13,
            "description": "AQL function \"for\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationFor\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "for",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 20,
            "description": "AQL function \"in\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationIn\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "in",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 27,
            "description": "AQL function \"filter\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationFilter\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "filter",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 34,
            "description": "AQL function \"from\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationFrom\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "from",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 41,
            "description": "AQL function \"include\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationInclude\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "include",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 48,
            "description": "AQL function \"collect\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationCollect\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "collect",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 55,
            "description": "AQL function \"into\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationInto\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "into",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 62,
            "description": "AQL function \"sort\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationSort\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "sort",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 70,
            "description": "AQL function \"limit\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationLimit\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "limit",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 77,
            "description": "AQL function \"let\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationLet\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "let",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 84,
            "description": "AQL function \"return\",see <a href=\"https://www.arangodb.org/manuals/current/Aql.html#AqlOperationReturn\">AQL Documentation</a>",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "itemtype": "method",
            "name": "return",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 221,
            "description": "Test the current query.",
            "itemtype": "method",
            "name": "test",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 231,
            "description": "Explain the current query.",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "explain",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 241,
            "description": "Execute the current query.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 262,
            "description": "Sets the count and batchsize options for the query for this instance.",
            "params": [
                {
                    "name": "num",
                    "description": "- the desired batchsize.",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "test",
            "return": {
                "description": "",
                "type": "QueryAPI"
            },
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 275,
            "description": "Returns a fresh query instance.",
            "itemtype": "method",
            "name": "test",
            "return": {
                "description": "",
                "type": "Aql"
            },
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/query.js",
            "line": 284,
            "description": "Returns true if there is more data to fetch,",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "test",
            "class": "query",
            "module": "arango",
            "submodule": "query"
        },
        {
            "file": "lib/api/simple.js",
            "line": 13,
            "description": "Returns all documents of a collections. The call expects a JSON object as body with the following attributes:",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "list",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 45,
            "description": "Returns any document of a collections. The call expects a JSON object as body with the following attributes:",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "any",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 64,
            "description": "This will find all documents matching a given example.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "example",
                    "description": "- An object defining the example.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "example",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 99,
            "description": "This will remove all documents matching a given example.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "example",
                    "description": "- An object defining the example.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "waitForSync",
                            "description": "-   if set to true, then all removal operations will instantly be\nsynchronised to disk. If this is not specified, then the collection's default sync behavior will be applied.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "removeByExample",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 135,
            "description": "This will find all documents in the collection that match the specified example object, and replace the entire\ndocument body with the new value specified. Note that document meta-attributes such as _id, _key, _from, _to etc.\ncannot be replaced.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "example",
                    "description": "- An object defining the example.",
                    "type": "Object"
                },
                {
                    "name": "newValue",
                    "description": "- The replacement object.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "waitForSync",
                            "description": "-   if set to true, then all removal operations will instantly be\nsynchronised to disk. If this is not specified, then the collection's default sync behavior will be applied.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "replaceByExample",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 178,
            "description": "This will find all documents in the collection that match the specified example object, and partially update the\ndocument body with the new value specified. Note that document meta-attributes such as _id, _key, _from, _to etc.\ncannot be replaced.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "example",
                    "description": "- An object defining the example.",
                    "type": "Object"
                },
                {
                    "name": "newValue",
                    "description": "- The replacement object.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "waitForSync",
                            "description": "-   if set to true, then all removal operations will instantly be\nsynchronised to disk. If this is not specified, then the collection's default sync behavior will be applied.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "keepNull",
                            "description": "-  \"false\" will remove null values from the update document.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "updateByExample",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 223,
            "description": "This will return the first documents matching a given example.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "example",
                    "description": "- An object defining the example.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "firstByExample",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 258,
            "description": "This will return the first documents from the collection, in the order of insertion/update time. When the count\nargument is supplied, the result will be a list of documents, with the \"oldest\" document being first in the\nresult list. If the count argument is not supplied, the result is the \"oldest\" document of the collection,\nor null if the collection is empty.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "count",
                    "description": "- the number of documents to return at most.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "first",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 295,
            "description": "This will return the last documents from the collection, in the order of insertion/update time. When the count\nargument is supplied, the result will be a list of documents, with the \"newest\" document being first in the\nresult list. If the count argument is not supplied, the result is the \"newest\" document of the collection,\nor null if the collection is empty.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "count",
                    "description": "- the number of documents to return at most.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "last",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 331,
            "description": "This will find all documents within a given range. You must declare a skip-list index on the attribute in order\nto be able to use a range query.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "attribute",
                    "description": "- the attribute path to check.",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "- The lower bound.",
                    "type": "Number|String"
                },
                {
                    "name": "right",
                    "description": "- The upper bound.",
                    "type": "Number|String"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "closed",
                            "description": "- If true, use interval including left and right, otherwise exclude\nright, but include left.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "range",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 378,
            "description": "The default will find at most 100 documents near a given coordinate. The returned list is sorted according to the\ndistance, with the nearest document coming first. If there are near documents of equal distance, documents are\nchosen randomly from this set until the limit is reached. In order to use the near operator, a geo index must be\ndefined for the collection. This index also defines which attribute holds the coordinates for the document.\nIf you have more then one geo-spatial index, you can use the geo field to select a particular index.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "latitude",
                    "description": "- The latitude of the coordinate.",
                    "type": "Number"
                },
                {
                    "name": "longitude",
                    "description": "- The longitude of the coordinate.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "geo",
                            "description": "-   If given, the identifier of the geo-index to use.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "distance",
                            "description": "- If given, the attribute key used to store the distance.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "near",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 423,
            "description": "This will find all documents with in a given radius around the coordinate (latitude, longitude). The returned\nlist is sorted by distance. In order to use the near operator, a geo index must be\ndefined for the collection. This index also defines which attribute holds the coordinates for the document.\nIf you have more then one geo-spatial index, you can use the geo field to select a particular index.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "latitude",
                    "description": "- The latitude of the coordinate.",
                    "type": "Number"
                },
                {
                    "name": "longitude",
                    "description": "- The longitude of the coordinate.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "- The radius in meters.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "geo",
                            "description": "-   If given, the identifier of the geo-index to use.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "distance",
                            "description": "- If given, the attribute key used to store the distance.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "within",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 471,
            "description": "This will find all documents from the collection that match the fulltext query specified in query. In order to\nuse the fulltext operator, a fulltext index must be defined for the collection and the specified attribute.",
            "params": [
                {
                    "name": "collection",
                    "description": "- The collection containing the documents.If not provided the collection defined\nin the connection is used.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "attribute",
                    "description": "- the attribute",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "- the query",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "-  JSONObject with optional parameters:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "skip",
                            "description": "-   can also be set using the \"skip\" method in this class.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "-  can also be set using the \"limit\" method in this class",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "index",
                            "description": "-   If given, the identifier of the fulltext-index to use.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "fulltext",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 512,
            "description": "Set the amount of elements to skip for queries performed with this instance.",
            "params": [
                {
                    "name": "val",
                    "description": "- The number of elements to skip.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "-  the modified instance",
                "type": "Simple"
            },
            "itemtype": "method",
            "name": "skip",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/simple.js",
            "line": 524,
            "description": "Set the limit for the result set for queries performed with this instance.",
            "params": [
                {
                    "name": "val",
                    "description": "- The result limit.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "-  the modified instance",
                "type": "Simple"
            },
            "itemtype": "method",
            "name": "limit",
            "class": "simple",
            "module": "arango",
            "submodule": "simple"
        },
        {
            "file": "lib/api/transaction.js",
            "line": 12,
            "params": [
                {
                    "name": "collection",
                    "description": "- contains the list of collections to be used in the transaction (mandatory).\n collections must be a JSON array that can have the optional sub-attributes read and write. read and write\n must each be either lists of collections names or strings with a single collection name.",
                    "type": "Object"
                },
                {
                    "name": "action",
                    "description": "- the actual transaction operations to be executed, in the form of stringified\n Javascript code.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a JSON Object contatining optional parameter:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "params",
                            "description": "- optional arguments passed to action.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "waitForSync",
                            "description": "- if set, will force the transaction to write all data to disk\n before returning.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "lockTimeout",
                            "description": "- a numeric value that can be used to set a timeout for waiting on\n collection locks. If not specified, a default value will be used. Setting lockTimeout to 0 will make ArangoDB\n not time out waiting for a lock.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "replicate",
                            "description": "- whether or not to replicate the operations from this transaction.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "submit",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "transaction",
            "module": "arango",
            "submodule": "transaction"
        },
        {
            "file": "lib/api/traversal.js",
            "line": 13,
            "params": [
                {
                    "name": "startVertex",
                    "description": "-  id of the startVertex, e.g. \"users/foo\".",
                    "type": "String"
                },
                {
                    "name": "edgeCollection",
                    "description": "-  the edge collection containing the edges.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a JSON Object contatining optional parameter:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "filter",
                            "description": "-  body (JavaScript code) of custom filter function\n (signature (config, vertex, path) -> mixed) can return four different string values: <br>- \"exclude\" -> this\n vertex will not be visited.<br>- \"prune\" -> the edges of this vertex will not be followed.<br>- \"\" or\n undefined -> visit the vertex and follow it's edges.<br>- Array -> containing any combination of the above.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "minDepth",
                            "description": "-   visits only nodes in at least the given depth",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxDepth",
                            "description": "-   visits only nodes in at most the given depth",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "visitor",
                            "description": "- body (JavaScript) code of custom visitor function (signature: (config,\n result, vertex, path) -> void visitor). Function can do anything, but its return value is ignored. To populate\n a result, use the result variable by reference.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "direction",
                            "description": "- direction for traversal.  if set, must be either \"outbound\", \"inbound\",\n or \"any\" , if not set, the expander attribute must be specified.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "init",
                            "description": "- body (JavaScript) code of custom result initialisation function (signature\n (config, result) -> void)  initialise any values in result with what is required,",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "expander",
                            "description": "- body (JavaScript) code of custom expander function must be set if\n direction attribute is not set. function (signature (config, vertex, path) -> array)  expander must return an\n array of the connections for vertex.Each connection is an object with the attributes edge and vertex",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "strategy",
                            "description": "- traversal strategy can be \"depthfirst\" or \"breadthfirst\"",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "order",
                            "description": "- traversal order can be \"preorder\" or \"postorder\"",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "itemOrder",
                            "description": "- item iteration order can be \"forward\" or \"backward\"",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "uniqueness",
                            "description": "- specifies uniqueness for vertices and edges visited if set, must be an\n object like this: \"uniqueness\": {\"vertices\": \"none\"|\"global\"|path\", \"edges\": \"none\"|\"global\"|\"path\"}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "maxIterations",
                            "description": "- Maximum number of iterations in each traversal. This number can be\n set to prevent endless loops in traversal of cyclic graphs. When a traversal performs as many iterations as\n the maxIterations value, the traversal will abort with an error. If maxIterations is not set, a\n server-defined value may be used.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "startTraversal",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "traversal",
            "module": "arango",
            "submodule": "traversal"
        },
        {
            "file": "lib/api/user.js",
            "line": 14,
            "description": "Creates a user.",
            "params": [
                {
                    "name": "username",
                    "description": "- the username.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "- the password.",
                    "type": "String"
                },
                {
                    "name": "active",
                    "description": "- true if is the user is active.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "extra",
                    "description": "- additional userdata as JSONObject",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "users",
            "module": "arango",
            "submodule": "users"
        },
        {
            "file": "lib/api/user.js",
            "line": 39,
            "description": "Returns the requested user.",
            "params": [
                {
                    "name": "username",
                    "description": "- the user to request data for.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "users",
            "module": "arango",
            "submodule": "users"
        },
        {
            "file": "lib/api/user.js",
            "line": 50,
            "description": "Replaces entry for user",
            "params": [
                {
                    "name": "username",
                    "description": "- the user to be replaced",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "- new password",
                    "type": "String"
                },
                {
                    "name": "active",
                    "description": "is the user is active.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "extra",
                    "description": "- additional userdata as JSONObject",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "users",
            "module": "arango",
            "submodule": "users"
        },
        {
            "file": "lib/api/user.js",
            "line": 80,
            "description": "updates entry for user",
            "params": [
                {
                    "name": "username",
                    "description": "- the user to be replaced",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "- new password",
                    "type": "String"
                },
                {
                    "name": "active",
                    "description": "- boolean is the user is active.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "extra",
                    "description": "- additional userdata as JSONObject",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "users",
            "module": "arango",
            "submodule": "users"
        },
        {
            "file": "lib/api/user.js",
            "line": 109,
            "description": "deletes user",
            "params": [
                {
                    "name": "username",
                    "description": "- the user to be deleted",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "users",
            "module": "arango",
            "submodule": "users"
        },
        {
            "file": "lib/arango.js",
            "line": 120,
            "description": "changes the arango connection",
            "params": [
                {
                    "name": "options",
                    "description": "- the new connection parameters.",
                    "type": "String|Object"
                }
            ],
            "itemtype": "method",
            "name": "use",
            "return": {
                "description": "",
                "type": "Arango"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 130,
            "description": "changes the arango defautl collection",
            "params": [
                {
                    "name": "collection",
                    "description": "- the collection to be used for all further requests.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "useCollection",
            "return": {
                "description": "",
                "type": "Arango"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 140,
            "description": "changes the arango database.",
            "params": [
                {
                    "name": "database",
                    "description": "- the database to perform every operation on.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "useDatabase",
            "return": {
                "description": "",
                "type": "Arango"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 150,
            "description": "add a new api module to the arango module",
            "params": [
                {
                    "name": "api",
                    "description": "- a new api module",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "api",
            "return": {
                "description": "",
                "type": "Arango"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 164,
            "description": "perform a HTTP \"GET\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 176,
            "description": "perform a HTTP \"POST\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "- the request body",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "post",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 189,
            "description": "perform a HTTP \"PUT\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "- the request body",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "put",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 202,
            "description": "perform a HTTP \"DELETE\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 214,
            "description": "perform a HTTP \"HEAD\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 226,
            "description": "perform a HTTP \"PATCH\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "- the request body",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "patch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 239,
            "description": "perform a HTTP \"OPTIONS\" request",
            "params": [
                {
                    "name": "path",
                    "description": "- the URL",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- a  JSON Object containing optional data.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- The callback function.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "options",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "arango",
            "module": "arango"
        },
        {
            "file": "lib/arango.js",
            "line": 251,
            "description": "Enables/disables the async mode. Every request is enriched with a header telling arangodb to perform the request\nasnyc.",
            "params": [
                {
                    "name": "active",
                    "description": "-  true to activate.",
                    "type": "Boolean"
                },
                {
                    "name": "[fireAndForget",
                    "description": "-  if true fire and forget mode is activated.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "setAsyncMode",
            "return": {
                "description": "",
                "type": "Arango"
            },
            "class": "arango",
            "module": "arango"
        }
    ],
    "warnings": []
}